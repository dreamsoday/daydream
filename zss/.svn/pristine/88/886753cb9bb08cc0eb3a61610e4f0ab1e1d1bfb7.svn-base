<?php

namespace frontend\models;

use Yii;

/**
 * This is the model class for table "zss_user".
 *
 * @property integer $user_id
 * @property string $user_name
 * @property string $user_phone
 * @property string $user_password
 * @property string $user_price
 * @property integer $user_integral
 * @property string $user_sex
 * @property integer $user_lastlogin
 * @property integer $user_status
 * @property integer $vip_id
 * @property integer $company_id
 * @property integer $created_at
 * @property integer $updated_at
 */
class User extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'zss_user';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_price'], 'number'],
            [['user_integral', 'user_lastlogin', 'user_status', 'vip_id', 'company_id', 'created_at', 'updated_at'], 'integer'],
            [['user_name'], 'string', 'max' => 30],
            [['user_phone'], 'string', 'max' => 11],
            [['user_password'], 'string', 'max' => 32],
            [['user_sex'], 'string', 'max' => 2]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'user_id' => 'User ID',
            'user_name' => 'User Name',
            'user_phone' => 'User Phone',
            'user_password' => 'User Password',
            'user_price' => 'User Price',
            'user_integral' => 'User Integral',
            'user_sex' => 'User Sex',
            'user_lastlogin' => 'User Lastlogin',
            'user_status' => 'User Status',
            'vip_id' => 'Vip ID',
            'company_id' => 'Company ID',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @公司
     */
    public function getCompany()
    {
        return $this->hasOne(Company::className(),['company_id'=>'company_id']);
    }
    /**
     * @用户删除
     */
    public function user_del($id)
    {
        return $this->deleteAll("user_id in($id)");
    }
    /**
     * @用户添加
     */
    public function user_add($data)
    {
        $user = new User;
        $user->user_name = $data["Form"]['user_name'];
        $user->user_phone = $data["Form"]['user_phone'];
        $user->user_password = $data["Form"]['user_password'];
        $user->user_price = $data["Form"]['user_price'];
        $user->user_integral = $data["Form"]['user_integral'];
        $user->company_id = $data['company_id'];
        $user->created_at = time();
        $user->updated_at = time();
        return $user->save();
    }
    /**
     * @用户信息
     */
    public function seluser($user_id)
    {
        return $this->find()->where("user_id = '$user_id'")->asarray()->one();
    }
    /**
     * @用户价格修改
     */
    public function upprice($data)
    {
        $re = new User;
        $user=$re->find()->where('user_id ='.$data["user_id"])->one();
        $user->user_price = $data['user_price'];
        $user->updated_at = time();
        return $user->save();
    }
    /**
     * @用户积分修改
     */
    public function upintegral($data)
    {
        $re = new User;
        $user=$re->find()->where('user_id ='.$data["user_id"])->one();
        $user->user_integral = $data['user_integral'];
        $user->updated_at = time();
        return $user->save();
    }
    public function upisarray($data)
    {
        $re = new User;
        $user=$re->find()->where('user_id ='.$data["user_id"])->one();
        if ($data['vip_id']==0) {
            $user->vip_id = 1;
        }else{
            $user->vip_id = 0;
        }
        $user->updated_at = time();
        return $user->save();
    }



    
    /*==============================宋听森begin===============================================*/
    //关联订单表
     public function getOrder()
    {
        // 第一个参数为要关联的子表模型类名，
        // 第二个参数指定 通过子表的customer_id，关联主表的id字段
        return $this->hasOne(Order::className(), ['user_id' => 'user_id']);
    }
    /*================================宋听森end===============================================*/

}
